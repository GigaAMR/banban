//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "activity_tags")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub activity_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub category_tag_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::activities::Entity",
        from = "Column::ActivityId",
        to = "super::activities::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Activities,
    #[sea_orm(
        belongs_to = "super::category_tags::Entity",
        from = "Column::CategoryTagId",
        to = "super::category_tags::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CategoryTags,
}

impl Related<super::activities::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Activities.def()
    }
}

impl Related<super::category_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CategoryTags.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
